name: cdktf-synth
description: Synthesize CDKTF stacks in order to deploy infrastructure as code. This project is for demonstration purposes only.
inputs:
  github_token:
    description: GITHUB_TOKEN to use GitHub API. Simply specify `secrets.GITHUB_TOKEN`.
    required: true
  job_name:
    description: jobs.<job-id>.name of this workflow job. This is needed to get the job ID via query.
    required: true
  ref:
    default: main
    description: Branch/Commit/Tag to use
    type: string
  terraform_version:
    default: 1.8.0
    description: The version of Terraform to use
    type: string
  working_directory:
    default: ./
    description: Working directory path that contains your cdktf code.
    type: string
  output:
    default: cdktf.out
    description: Output directory for the synthesized Terraform config
    type: string
  save:
    default: false
    description: When set to true, save the generated files to a GitHub Artifact.
    type: boolean
  
outputs:
  stacks:
    description: JSON array of strings, containing the names of the CDKTF stacks that were synthesized.
    value: ${{ steps.synth.outputs.stacks }}

runs:
  using: composite
  steps:
    - id: jobid_action
      uses: Tiryoh/gha-jobid-action@v1
      with:
        github_token: ${{ inputs.GITHUB_TOKEN }}
        job_name: ${{ inputs.job_name }}
        per_page: 100

    - uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ inputs.terraform_version }}

    - uses: actions/checkout@v4
      id: checkout
      with:
        fetch-depth: 0
        ref: ${{ inputs.ref }}

    - name: Load Configuration
      id: configurations
      shell: bash
      working-directory: ${{ inputs.working_directory }}
      run: |
        echo "node_version=$(cat .nvmrc)" >> $GITHUB_OUTPUT

    - uses: actions/setup-node@v4
      with:
        node-version: ${{ steps.configurations.outputs.node_version }}
        cache: npm
        cache-dependency-path: ${{ inputs.working_directory }}/package-lock.json

    - name: Install Node Dependencies
      shell: bash
      working-directory: ${{ inputs.working_directory }}
      run: npm ci

    - name: Synthesize Stacks
      id: synth
      shell: bash
      working-directory: ${{ inputs.working_directory }}
      run: |
        npx cdktf synth
        echo "stacks=$(jq --compact-output --null-input '$ARGS.positional' --args -- $(ls cdktf.out/stacks))" >> $GITHUB_OUTPUT

    - name: Save Assets
      if: ${{ inputs.save == 'true' }}
      uses: actions/upload-artifact@v4
      with:
        name: ${{ steps.jobid_action.outputs.job_id }}
        path: ${{ inputs.working_directory }}/${{ inputs.output }}
